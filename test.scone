module test;

#def main{T}(a, b: Vec2{T=T}[+(!ba)[].f(t=24) + 0x13], result: i32)(
#	#var c: i32;
#);

def dot[T](a: var array[3; Vec2[T=U]], b: array[3; Vec2[D=T]]) -> T {
	#return a.x * b.x + a.y * b.y;
};

#def dot[T](a: Vec2[T], b: array[3 * f 4 ; Vec2[T]]) -> T {
#	#return a.x * b.x + a.y * b.y;
#};
#
struct Vec2[T] {
	x: T;
	y: T;
};
#--------


#a.plus(b).c(d)


#d.e[ptr ptr array[3; ptr ptr ptr i32]]() + a.plus[T=array[3; i32]](b)




#3 + 4 + (c) method[T](a=3 plus 4, b=c) * b * (6 + 5)
#(3 plus 4) times (8 plus a)

#d.plus(b).c(aaa)
#(d.plus(b).c(aaa)) + (d plus b c aaa)
#d.plus(b) minus c
#d.plus(b.minus(ccc=aaa))
#a.plus b.x(e minus c times d)
#d.plus.b minus c(3.plus)
#d plus b
#3 + 4 + 5

#(3@ + a)@
#(a).b(d) #b[T](a, c)

#def plus(left: i32, right: i32) -> i32 {
#	#return left + right;
#};
#
#struct Temp {
#	x: array[a plus c; u32];
#};
